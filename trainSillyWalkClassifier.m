%%the document about the net

function model = trainSillyWalkClassifier(XTrain, YTrain)  
 
inputSize = 3;
numHiddenUnits = 100;
numClasses = 2;

% layers = [ ...
%      sequenceInputLayer(inputSize)
%      lstmLayer(numHiddenUnits,'OutputMode','last')
%      dropoutLayer
%      reluLayer
%      fullyConnectedLayer(numClasses)
%      softmaxLayer
%      classificationLayer];

%  maxEpochs = 15;
%  miniBatchSize = 32;
%  options = trainingOptions('adam', ...  
%      'ExecutionEnvironment','cpu', ...  
%      'GradientThreshold',1, ...  
%      'MaxEpochs',maxEpochs, ...  
%      'MiniBatchSize',miniBatchSize, ...  
%      'SequenceLength','longest', ...  
%      'Shuffle','once', ...  
%      'Verbose',0, ...
%      'Plots','training-progress');



layers = [
    sequenceInputLayer(inputSize)
    gruLayer(numHiddenUnits, 'OutputMode', 'last')
    dropoutLayer(0.2)
    fullyConnectedLayer(numClasses)
    softmaxLayer
    classificationLayer];

% Set training options
maxEpochs = 15;
miniBatchSize = 32;
options = trainingOptions('adam', ...
    'ExecutionEnvironment','cpu', ...
    'GradientThreshold',1, ...
    'MaxEpochs', maxEpochs, ...
    'MiniBatchSize', miniBatchSize, ...
    'SequenceLength', 'longest', ...
    'Shuffle', 'every-epoch', ...
    'Plots', 'training-progress', ...
    'Verbose', true);
%     'ValidationData', {XValid, YValid}, ...
%     'ValidationFrequency', 5, ...


model = trainNetwork(XTrain,YTrain,layers,options);


save(fullfile(fileparts(mfilename('fullpath')), 'Model.mat'), 'model'); % do not change this line

end
